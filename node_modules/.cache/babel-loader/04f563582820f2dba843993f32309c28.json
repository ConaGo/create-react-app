{"ast":null,"code":"var _jsxFileName = \"/home/lj/Git/myproject/AOT/aot_ha1/src/Graphs/try.js\";\nimport React, { Component } from 'react';\nimport { ForceGraph2D } from 'react-force-graph';\nimport { Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class Try extends Component {\n  constructor(props) {\n    super(props); // Don't call this.setState() here!\n\n    this.state = {\n      dropdownOpen: false,\n      idCounter: 3,\n      source: {},\n      data: {\n        nodes: [{\n          \"id\": \"id1\",\n          \"name\": \"name1\",\n          \"val\": 1\n        }, {\n          \"id\": \"id2\",\n          \"name\": \"name2\",\n          \"val\": 0.5\n        }],\n        links: [{\n          \"source\": \"id1\",\n          \"target\": \"id2\"\n        }]\n      }\n    };\n    this.handleAddNode = this.handleAddNode.bind(this);\n    this.toggleDropDown = this.toggleDropDown.bind(this);\n    this.handleSetSource = this.handleSetSource.bind(this);\n  }\n\n  handleAddNode() {\n    if (this.state.source) {\n      this.setState(prevState => ({\n        data: {\n          nodes: [...prevState.data.nodes, {\n            id: \"id\" + prevState.idCounter,\n            name: \"name\" + prevState.idCounter,\n            val: 20\n          }],\n          links: [...prevState.data.links, {\n            source: \"id\" + prevState.idCounter,\n            target: prevState.source.id\n          }]\n        },\n        idCounter: prevState.idCounter + 1\n      }));\n    }\n\n    console.log(this.state);\n  }\n\n  handleAddEdge() {}\n\n  handleSetSource(source) {\n    console.log(source);\n    this.setState({\n      source: source\n    });\n  }\n\n  toggleDropDown() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  render() {\n    const data = this.state.data;\n    const sourceName = this.state.source.name;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"hallo\"), React.createElement(Button, {\n      onClick: this.handleAddNode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"add a Node\"), React.createElement(Dropdown, {\n      isOpen: this.state.dropdownOpen,\n      toggle: this.toggleDropDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"FirstConnection\"), sourceName), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.data.nodes.map((item, i) => React.createElement(DropdownItem, {\n      key: i,\n      onClick: () => this.handleSetSource(item, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, item.name)))), React.createElement(ForceGraph2D, {\n      graphData: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/lj/Git/myproject/AOT/aot_ha1/src/Graphs/try.js"],"names":["React","Component","ForceGraph2D","Button","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Try","constructor","props","state","dropdownOpen","idCounter","source","data","nodes","links","handleAddNode","bind","toggleDropDown","handleSetSource","setState","prevState","id","name","val","target","console","log","handleAddEdge","render","sourceName","map","item","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { ForceGraph2D } from 'react-force-graph';\nimport { Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nexport default class Try extends Component {\n    constructor(props) {\n        super(props);\n        // Don't call this.setState() here!\n        this.state = { \n            dropdownOpen: false,\n            idCounter: 3,\n            source: {},\n            data: {\n                nodes: [ \n                    { \n                      \"id\": \"id1\",\n                      \"name\": \"name1\",\n                      \"val\": 1 \n                    },\n                    { \n                      \"id\": \"id2\",\n                      \"name\": \"name2\",\n                      \"val\": 0.5 \n                    },\n                ],\n                links: [\n                    {\n                        \"source\": \"id1\",\n                        \"target\": \"id2\"\n                    },\n                ]\n            }\n        };\n        this.handleAddNode = this.handleAddNode.bind(this);\n        this.toggleDropDown = this.toggleDropDown.bind(this);\n        this.handleSetSource = this.handleSetSource.bind(this);\n    }\n    handleAddNode(){\n        if(this.state.source){\n            this.setState(prevState => ({\n                data: {\n                    nodes:[\n                        ...prevState.data.nodes,\n                        {\n                            id: \"id\" + prevState.idCounter,\n                            name: \"name\" + prevState.idCounter,\n                            val: 20\n                        }                \n                    ],\n                    links: [\n\n                        ...prevState.data.links,\n                        {\n                            source: \"id\" + prevState.idCounter,\n                            target: prevState.source.id\n                        }\n                    ]\n                },\n                idCounter: prevState.idCounter + 1\n            }))\n        }\n        console.log(this.state)\n    }\n    handleAddEdge(){\n    }\n    handleSetSource(source){\n        console.log(source)\n        this.setState({\n            source: source\n        })\n    }\n    toggleDropDown() {\n        this.setState(prevState => ({\n          dropdownOpen: !prevState.dropdownOpen\n        }));\n    }\n    a\n    render() {\n        const data = this.state.data\n        const sourceName = this.state.source.name\n      return(\n          <div>\n            <p>hallo</p>\n            <Button onClick={this.handleAddNode}>add a Node</Button>\n            <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropDown}>\n                <DropdownToggle caret>\n                    <p>FirstConnection</p>\n                    {sourceName}\n                </DropdownToggle>\n                <DropdownMenu>\n\n                {this.state.data.nodes.map((item, i )=> <DropdownItem key={i} onClick={() => this.handleSetSource(item, i)}>{item.name}</DropdownItem>)}\n\n                </DropdownMenu>\n            </Dropdown>\n            <ForceGraph2D graphData={data}></ForceGraph2D>\n\n          </div>\n          \n      )\n    }\n  }"]},"metadata":{},"sourceType":"module"}