{"ast":null,"code":"var _jsxFileName = \"/home/lj/Git/myproject/AOT/aot_ha1/src/Graphs/try.js\";\nimport React, { Component } from 'react';\nimport { ForceGraph2D } from 'react-force-graph';\nimport { Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class Try extends Component {\n  constructor(props) {\n    super(props); // Don't call this.setState() here!\n\n    this.state = {\n      dropdownOpen: false,\n      idCounter: 3,\n      source: '',\n      data: {\n        nodes: [{\n          \"id\": \"id1\",\n          \"name\": \"name1\",\n          \"val\": 1\n        }, {\n          \"id\": \"id2\",\n          \"name\": \"name2\",\n          \"val\": 10\n        }],\n        links: [{\n          \"source\": \"id1\",\n          \"target\": \"id2\"\n        }]\n      }\n    };\n    this.handleAddNode = this.handleAddNode.bind(this);\n    this.toggleDropDown = this.toggleDropDown.bind(this);\n    this.handleSetSource = this.handleSetSource.bind(this);\n  }\n\n  handleAddNode() {\n    this.setState(prevState => ({\n      data: {\n        nodes: [...prevState.data.nodes, {\n          id: \"id\" + prevState.idCounter,\n          name: \"name\" + prevState.idCounter,\n          val: 20\n        }],\n        links: [...prevState.data.links]\n      },\n      idCounter: prevState.idCounter + 1\n    }));\n    console.log(this.state);\n  }\n\n  handleAddEdge() {}\n\n  handleSetSource(source) {\n    console.log(source);\n    this.setState({\n      source: ''\n    });\n  }\n\n  toggleDropDown() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  render() {\n    const data = this.state.data;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"hallo\"), React.createElement(Button, {\n      onClick: this.handleAddNode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"add a Node\"), React.createElement(Dropdown, {\n      isOpen: this.state.dropdownOpen,\n      toggle: this.toggleDropDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"FirstConnection\"), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.data.nodes.map((item, i) => React.createElement(DropdownItem, {\n      header: true,\n      key: i,\n      onClick: () => this.handleSetSource(item, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, item.name)))), React.createElement(ForceGraph2D, {\n      graphData: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/lj/Git/myproject/AOT/aot_ha1/src/Graphs/try.js"],"names":["React","Component","ForceGraph2D","Button","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Try","constructor","props","state","dropdownOpen","idCounter","source","data","nodes","links","handleAddNode","bind","toggleDropDown","handleSetSource","setState","prevState","id","name","val","console","log","handleAddEdge","render","map","item","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { ForceGraph2D } from 'react-force-graph';\nimport { Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nexport default class Try extends Component {\n    constructor(props) {\n        super(props);\n        // Don't call this.setState() here!\n        this.state = { \n            dropdownOpen: false,\n            idCounter: 3,\n            source: '',\n            data: {\n                nodes: [ \n                    { \n                      \"id\": \"id1\",\n                      \"name\": \"name1\",\n                      \"val\": 1 \n                    },\n                    { \n                      \"id\": \"id2\",\n                      \"name\": \"name2\",\n                      \"val\": 10 \n                    },\n                ],\n                links: [\n                    {\n                        \"source\": \"id1\",\n                        \"target\": \"id2\"\n                    },\n                ]\n            }\n        };\n        this.handleAddNode = this.handleAddNode.bind(this);\n        this.toggleDropDown = this.toggleDropDown.bind(this);\n        this.handleSetSource = this.handleSetSource.bind(this);\n    }\n    handleAddNode(){\n        this.setState(prevState => ({\n            data: {\n                nodes:[\n                    ...prevState.data.nodes,\n                    {\n                        id: \"id\" + prevState.idCounter,\n                        name: \"name\" + prevState.idCounter,\n                        val: 20\n                    }                \n                ],\n                links: [\n                    ...prevState.data.links\n                ]\n            },\n            idCounter: prevState.idCounter + 1\n        }))\n        console.log(this.state)\n    }\n    handleAddEdge(){\n    }\n    handleSetSource(source){\n        console.log(source)\n        this.setState({\n            source: ''\n        })\n    }\n    toggleDropDown() {\n        this.setState(prevState => ({\n          dropdownOpen: !prevState.dropdownOpen\n        }));\n    }\n    a\n    render() {\n        const data = this.state.data\n      return(\n          <div>\n            <p>hallo</p>\n            <Button onClick={this.handleAddNode}>add a Node</Button>\n            <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropDown}>\n                <DropdownToggle caret>\n                FirstConnection\n                </DropdownToggle>\n                <DropdownMenu>\n\n                {this.state.data.nodes.map((item, i )=> <DropdownItem header key={i} onClick={() => this.handleSetSource(item, i)}>{item.name}</DropdownItem>)}\n\n                </DropdownMenu>\n            </Dropdown>\n            <ForceGraph2D graphData={data}></ForceGraph2D>\n\n          </div>\n          \n      )\n    }\n  }"]},"metadata":{},"sourceType":"module"}