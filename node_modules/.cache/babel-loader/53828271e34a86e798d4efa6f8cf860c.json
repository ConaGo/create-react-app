{"ast":null,"code":"var _jsxFileName = \"/home/lj/Git/myproject/AOT/aot_ha1/src/Graphs/try.js\";\nimport React, { Component } from 'react';\nimport { ForceGraph2D } from 'react-force-graph';\nimport { Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nexport default class Try extends Component {\n  constructor(props) {\n    super(props); // Don't call this.setState() here!\n\n    this.state = {\n      dropdownOpen: false,\n      idCounter: 3,\n      data: {\n        nodes: [{\n          \"id\": \"id1\",\n          \"name\": \"name1\",\n          \"val\": 1\n        }, {\n          \"id\": \"id2\",\n          \"name\": \"name2\",\n          \"val\": 10\n        }],\n        links: [{\n          \"source\": \"id1\",\n          \"target\": \"id2\"\n        }]\n      }\n    };\n    this.handleAddNode = this.handleAddNode.bind(this);\n  }\n\n  handleAddNode() {\n    this.setState(prevState => ({\n      data: {\n        nodes: [...prevState.data.nodes, {\n          id: \"id\" + prevState.idCounter,\n          name: \"name\" + prevState.idCounter,\n          val: 20\n        }],\n        links: [...prevState.data.links]\n      },\n      idCounter: prevState.idCounter++\n    }));\n    console.log(this.state);\n  }\n\n  handleAddEdge() {}\n\n  toggleDropDown() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  render() {\n    const data = this.state.data;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"hallo\"), React.createElement(Button, {\n      onClick: this.handleAddNode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"add a Node\"), React.createElement(Dropdown, {\n      isOpen: this.state.dropDownOpen,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Dropdown\"), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      header: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Header\"), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Some Action\"), React.createElement(DropdownItem, {\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Action (disabled)\"), React.createElement(DropdownItem, {\n      divider: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Foo Action\"), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Bar Action\"), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Quo Action\"))), React.createElement(ForceGraph2D, {\n      graphData: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/lj/Git/myproject/AOT/aot_ha1/src/Graphs/try.js"],"names":["React","Component","ForceGraph2D","Button","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Try","constructor","props","state","dropdownOpen","idCounter","data","nodes","links","handleAddNode","bind","setState","prevState","id","name","val","console","log","handleAddEdge","toggleDropDown","render","dropDownOpen","toggle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { ForceGraph2D } from 'react-force-graph';\nimport { Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nexport default class Try extends Component {\n    constructor(props) {\n        super(props);\n        // Don't call this.setState() here!\n        this.state = { \n            dropdownOpen: false,\n            idCounter: 3,\n            data: {\n                nodes: [ \n                    { \n                      \"id\": \"id1\",\n                      \"name\": \"name1\",\n                      \"val\": 1 \n                    },\n                    { \n                      \"id\": \"id2\",\n                      \"name\": \"name2\",\n                      \"val\": 10 \n                    },\n                ],\n                links: [\n                    {\n                        \"source\": \"id1\",\n                        \"target\": \"id2\"\n                    },\n                ]\n            }\n        };\n        this.handleAddNode = this.handleAddNode.bind(this);\n    }\n    handleAddNode(){\n        this.setState(prevState => ({\n            data: {\n                nodes:[\n                    ...prevState.data.nodes,\n                    {\n                        id: \"id\" + prevState.idCounter,\n                        name: \"name\" + prevState.idCounter,\n                        val: 20\n                    }                \n                ],\n                links: [\n                    ...prevState.data.links\n                ]\n            },\n            idCounter: prevState.idCounter++\n        }))\n        console.log(this.state)\n    }\n    handleAddEdge(){\n\n    }\n    toggleDropDown() {\n        this.setState(prevState => ({\n          dropdownOpen: !prevState.dropdownOpen\n        }));\n    }\n    render() {\n        const data = this.state.data\n      return(\n          <div>\n            <p>hallo</p>\n            <Button onClick={this.handleAddNode}>add a Node</Button>\n            <Dropdown isOpen={this.state.dropDownOpen} toggle={this.toggle}>\n                <DropdownToggle caret>\n                Dropdown\n                </DropdownToggle>\n                <DropdownMenu>\n                <DropdownItem header>Header</DropdownItem>\n                <DropdownItem>Some Action</DropdownItem>\n                <DropdownItem disabled>Action (disabled)</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>Foo Action</DropdownItem>\n                <DropdownItem>Bar Action</DropdownItem>\n                <DropdownItem>Quo Action</DropdownItem>\n                </DropdownMenu>\n            </Dropdown>\n            <ForceGraph2D graphData={data}></ForceGraph2D>\n\n          </div>\n          \n      )\n    }\n  }"]},"metadata":{},"sourceType":"module"}