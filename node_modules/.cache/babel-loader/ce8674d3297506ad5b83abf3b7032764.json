{"ast":null,"code":"var _jsxFileName = \"/home/lj/Git/myproject/AOT/aot_ha1/src/Graphs/try.js\";\nimport React, { Component } from 'react';\nimport { ForceGraph2D, ForceGraph3D, ForceGraphVR } from 'react-force-graph';\nimport { Button } from 'reactstrap';\nexport default class Try extends Component {\n  constructor(props) {\n    super(props); // Don't call this.setState() here!\n\n    this.state = {\n      idCounter: 3,\n      data: {\n        nodes: [{\n          \"id\": \"id1\",\n          \"name\": \"name1\",\n          \"val\": 1\n        }, {\n          \"id\": \"id2\",\n          \"name\": \"name2\",\n          \"val\": 10\n        }],\n        links: [{\n          \"source\": \"id1\",\n          \"target\": \"id2\"\n        }]\n      }\n    };\n    this.handleAddNode = this.handleAddNode.bind(this);\n  }\n\n  handleAddNode() {\n    this.setState(prevState => ({\n      data: {\n        nodes: [...prevState.data.nodes, {\n          \"id\": \"id\" + prevState.idCounter,\n          \"name\": \"name\" + prevState.idCounter,\n          \"val\": 20\n        }],\n        links: [...prevState.data.links]\n      },\n      idCounter: prevState.idCounter++\n    }));\n    console.log(this.state);\n  }\n\n  handleAddEdge() {}\n\n  render() {\n    const data = this.state.data;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"hallo\"), React.createElement(Button, {\n      onClick: this.handleAddNode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"add a Node\"), React.createElement(ForceGraph2D, {\n      graphData: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/lj/Git/myproject/AOT/aot_ha1/src/Graphs/try.js"],"names":["React","Component","ForceGraph2D","ForceGraph3D","ForceGraphVR","Button","Try","constructor","props","state","idCounter","data","nodes","links","handleAddNode","bind","setState","prevState","console","log","handleAddEdge","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,YAArC,QAAyD,mBAAzD;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,eAAe,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AACvCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,CADF;AAETC,MAAAA,IAAI,EAAE;AACFC,QAAAA,KAAK,EAAE,CACH;AACE,gBAAM,KADR;AAEE,kBAAQ,OAFV;AAGE,iBAAO;AAHT,SADG,EAMH;AACE,gBAAM,KADR;AAEE,kBAAQ,OAFV;AAGE,iBAAO;AAHT,SANG,CADL;AAaFC,QAAAA,KAAK,EAAE,CACH;AACI,oBAAU,KADd;AAEI,oBAAU;AAFd,SADG;AAbL;AAFG,KAAb;AAuBA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AACDD,EAAAA,aAAa,GAAE;AACX,SAAKE,QAAL,CAAcC,SAAS,KAAK;AACxBN,MAAAA,IAAI,EAAE;AACFC,QAAAA,KAAK,EAAC,CACF,GAAGK,SAAS,CAACN,IAAV,CAAeC,KADhB,EAEF;AACI,gBAAM,OAAOK,SAAS,CAACP,SAD3B;AAEI,kBAAQ,SAASO,SAAS,CAACP,SAF/B;AAGI,iBAAO;AAHX,SAFE,CADJ;AASFG,QAAAA,KAAK,EAAE,CACH,GAAGI,SAAS,CAACN,IAAV,CAAeE,KADf;AATL,OADkB;AAcxBH,MAAAA,SAAS,EAAEO,SAAS,CAACP,SAAV;AAda,KAAL,CAAvB;AAgBAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AACH;;AACDW,EAAAA,aAAa,GAAE,CAEd;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAMV,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAxB;AACF,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKG,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAEH,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADJ;AASD;;AA9DsC","sourcesContent":["import React, { Component } from 'react';\nimport { ForceGraph2D, ForceGraph3D, ForceGraphVR } from 'react-force-graph';\nimport { Button } from 'reactstrap';\nexport default class Try extends Component {\n    constructor(props) {\n        super(props);\n        // Don't call this.setState() here!\n        this.state = { \n            idCounter: 3,\n            data: {\n                nodes: [ \n                    { \n                      \"id\": \"id1\",\n                      \"name\": \"name1\",\n                      \"val\": 1 \n                    },\n                    { \n                      \"id\": \"id2\",\n                      \"name\": \"name2\",\n                      \"val\": 10 \n                    },\n                ],\n                links: [\n                    {\n                        \"source\": \"id1\",\n                        \"target\": \"id2\"\n                    },\n                ]\n            }\n        };\n        this.handleAddNode = this.handleAddNode.bind(this);\n    }\n    handleAddNode(){\n        this.setState(prevState => ({\n            data: {\n                nodes:[\n                    ...prevState.data.nodes,\n                    {\n                        \"id\": \"id\" + prevState.idCounter,\n                        \"name\": \"name\" + prevState.idCounter,\n                        \"val\": 20\n                    }                \n                ],\n                links: [\n                    ...prevState.data.links\n                ]\n            },\n            idCounter: prevState.idCounter++\n        }))\n        console.log(this.state)\n    }\n    handleAddEdge(){\n\n    }\n    render() {\n        const data = this.state.data\n      return(\n          <div>\n            <p>hallo</p>\n            <Button onClick={this.handleAddNode}>add a Node</Button>\n            <ForceGraph2D graphData={data}></ForceGraph2D>\n\n          </div>\n          \n      )\n    }\n  }"]},"metadata":{},"sourceType":"module"}