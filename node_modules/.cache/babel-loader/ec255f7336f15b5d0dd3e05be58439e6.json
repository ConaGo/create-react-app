{"ast":null,"code":"var _jsxFileName = \"/home/lj/Git/myproject/AOT/aot_ha1/src/Graphs/try2.js\";\nimport React, { Component } from 'react';\nimport { ForceGraph2D } from 'react-force-graph';\nimport { Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, FormGroup, Label, Input } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //import { Graph } from 'react-d3-graph';\n\nimport data1 from './data';\nconst WIND = 'WIND';\nconst TIDAL = 'TIDAL';\nconst SOLAR = 'SOLAR';\nconst SATURATED = 'SATURATED';\nconst OVER_SATURATED = 'OVER_SATURATED';\nconst UNDER_SATURATED = 'UNDER_SATURATED';\nexport default class Try extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePlantChange = changeEvent => {\n      this.setState({\n        selectedPlant: changeEvent.target.value\n      });\n    };\n\n    this.myRef = React.createRef();\n    this.state = {\n      saturated: false,\n      dataSet_1: {\n        cities: [{\n          id: 1,\n          currentSaturation: 0,\n          totalDemand: 150,\n          name: 'City1',\n          isSaturated: false\n        }, {\n          id: 2,\n          currentSaturation: 0,\n          totalDemand: 150,\n          name: 'City2',\n          isSaturated: false\n        }, {\n          id: 3,\n          currentSaturation: 0,\n          totalDemand: 150,\n          name: 'City3',\n          isSaturated: false\n        }, {\n          id: 4,\n          currentSaturation: 0,\n          totalDemand: 150,\n          name: 'City4',\n          isSaturated: false\n        }, {\n          id: 5,\n          currentSaturation: 0,\n          totalDemand: 150,\n          name: 'City5',\n          isSaturated: false\n        }, {\n          id: 6,\n          currentSaturation: 0,\n          totalDemand: 150,\n          name: 'City6',\n          isSaturated: false\n        }, {\n          id: 7,\n          currentSaturation: 0,\n          totalDemand: 150,\n          name: 'City7',\n          isSaturated: false\n        }, {\n          id: 8,\n          currentSaturation: 0,\n          totalDemand: 150,\n          name: 'City8',\n          isSaturated: false\n        }, {\n          id: 9,\n          currentSaturation: 0,\n          totalDemand: 150,\n          name: 'City9',\n          isSaturated: false\n        }, {\n          id: 10,\n          currentSaturation: 0,\n          totalDemand: 150,\n          name: 'City10',\n          isSaturated: false\n        }, {\n          id: 11,\n          currentSaturation: 0,\n          totalDemand: 150,\n          name: 'City11',\n          isSaturated: false\n        }],\n        plants: [{\n          id: 20,\n          production: 0,\n          isEmpty: false,\n          multiplier: 1,\n          type: TIDAL,\n          connections: [1],\n          previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n          name: 'WAVE1'\n        }, {\n          id: 21,\n          production: 0,\n          isEmpty: false,\n          multiplier: 1,\n          type: TIDAL,\n          connections: [1],\n          previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n          name: 'WAVE2'\n        }, {\n          id: 22,\n          production: 0,\n          isEmpty: false,\n          multiplier: 1,\n          type: TIDAL,\n          connections: [1],\n          previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n          name: 'WAVE3'\n        }, {\n          id: 23,\n          production: 0,\n          isEmpty: false,\n          multiplier: 1,\n          type: TIDAL,\n          connections: [7, 8],\n          previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n          name: 'WAVE4'\n        }, {\n          id: 30,\n          production: 0,\n          isEmpty: false,\n          multiplier: 1,\n          type: SOLAR,\n          connections: [1, 2, 3],\n          previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n          name: 'SOLAR1'\n        }, {\n          id: 31,\n          production: 0,\n          isEmpty: false,\n          multiplier: 1,\n          type: SOLAR,\n          connections: [6],\n          previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n          name: 'SOLAR2'\n        }, {\n          id: 32,\n          production: 0,\n          isEmpty: false,\n          multiplier: 1,\n          type: SOLAR,\n          connections: [6],\n          previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n          name: 'SOLAR3'\n        }, {\n          id: 33,\n          production: 0,\n          isEmpty: false,\n          multiplier: 1,\n          type: SOLAR,\n          connections: [6],\n          previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n          name: 'SOLAR4'\n        }, {\n          id: 34,\n          production: 0,\n          isEmpty: false,\n          multiplier: 1,\n          type: SOLAR,\n          connections: [8, 9],\n          previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n          name: 'SOLAR5'\n        }, {\n          id: 40,\n          production: 0,\n          isEmpty: false,\n          multiplier: 1,\n          type: WIND,\n          connections: [8, 7],\n          previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n          name: 'WIND2'\n        }, {\n          id: 41,\n          production: 0,\n          isEmpty: false,\n          multiplier: 1,\n          type: WIND,\n          connections: [5],\n          previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n          name: 'WIND3'\n        }, {\n          id: 42,\n          production: 0,\n          isEmpty: false,\n          multiplier: 1,\n          type: WIND,\n          connections: [5],\n          previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n          name: 'WIND4'\n        }, {\n          id: 43,\n          production: 0,\n          isEmpty: false,\n          multiplier: 1,\n          type: WIND,\n          connections: [5],\n          previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n          name: 'WIND5'\n        }, {\n          id: 44,\n          production: 0,\n          isEmpty: false,\n          multiplier: 1,\n          type: WIND,\n          connections: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n          previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n          name: 'WIND6'\n        }, {\n          id: 45,\n          production: 0,\n          isEmpty: false,\n          multiplier: 1,\n          type: WIND,\n          connections: [3, 4],\n          previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n          name: 'WIND7'\n        }, {\n          id: 46,\n          production: 0,\n          isEmpty: false,\n          multiplier: 1,\n          type: WIND,\n          connections: [11],\n          previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n          name: 'WIND6'\n        }, {\n          id: 47,\n          production: 0,\n          isEmpty: false,\n          multiplier: 1,\n          type: WIND,\n          connections: [10],\n          previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n          name: 'WIND6'\n        }]\n      },\n      dropdownOpen: false,\n      dropdownOpen2: false,\n      idCounter: 5,\n      source: {\n        id: 0\n      },\n      drain: {},\n      startValue: 0,\n      selectedPlant: 'wind',\n      wind: 50,\n      tidal: 50,\n      solar: 50,\n      cities: [{\n        id: 1,\n        currentSaturation: 0,\n        totalDemand: 1500,\n        name: 'Berlin',\n        isSaturated: false\n      }, {\n        id: 2,\n        currentSaturation: 0,\n        totalDemand: 2500,\n        name: 'Tokyo',\n        isSaturated: false\n      }, {\n        id: 13,\n        currentSaturation: 0,\n        totalDemand: 800,\n        name: 'Berlin',\n        isSaturated: false\n      }, {\n        id: 14,\n        currentSaturation: 0,\n        totalDemand: 1000,\n        name: 'Berlin',\n        isSaturated: false\n      }, {\n        id: 15,\n        currentSaturation: 0,\n        totalDemand: 250,\n        name: 'Berlin',\n        isSaturated: false\n      }, {\n        id: 16,\n        currentSaturation: 0,\n        totalDemand: 1000,\n        name: 'Berlin',\n        isSaturated: false\n      }],\n      plants: [{\n        id: 3,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: WIND,\n        connections: [1, 2, 13, 15],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WIND1'\n      }, {\n        id: 4,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: TIDAL,\n        connections: [1, 2, 16, 13],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WAVE1'\n      }, {\n        id: 5,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: TIDAL,\n        connections: [1, 2, 16, 15],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WAVE2'\n      }, {\n        id: 6,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: TIDAL,\n        connections: [1, 2, 16, 13, 14],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WAVE3'\n      }, {\n        id: 7,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: TIDAL,\n        connections: [2, 16, 15],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WAVE4'\n      }, {\n        id: 8,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: TIDAL,\n        connections: [1, 13, 16],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WAVE5'\n      }, {\n        id: 9,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: TIDAL,\n        connections: [1, 2, 16],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WAVE6'\n      }, {\n        id: 10,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: TIDAL,\n        connections: [15],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WAVE7'\n      }, {\n        id: 11,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: TIDAL,\n        connections: [1, 2, 13],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WAVE8'\n      }, {\n        id: 120,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: SOLAR,\n        connections: [1, 2, 14, 16],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'SOLAR1'\n      }, {\n        id: 121,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: SOLAR,\n        connections: [14, 16],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'SOLAR2'\n      }, {\n        id: 123,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: SOLAR,\n        connections: [1, 2, 14, 16],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'SOLAR3'\n      }, {\n        id: 124,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: SOLAR,\n        connections: [1, 2, 15, 13],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'SOLAR4'\n      }, {\n        id: 125,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: SOLAR,\n        connections: [14, 13],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'SOLAR5'\n      }, {\n        id: 126,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: SOLAR,\n        connections: [14, 13],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'SOLAR6'\n      }, {\n        id: 127,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: SOLAR,\n        connections: [1, 2, 15, 13],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'SOLAR7'\n      }, {\n        id: 128,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: SOLAR,\n        connections: [, 14, 13],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'SOLAR8'\n      }, {\n        id: 129,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: SOLAR,\n        connections: [1, 2, 14, 13],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'SOLAR9'\n      }, {\n        id: 130,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: SOLAR,\n        connections: [2, 14, 16],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'SOLAR10'\n      }, {\n        id: 131,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: WIND,\n        connections: [1, 2, 13, 16],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WIND2'\n      }, {\n        id: 132,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: WIND,\n        connections: [1, 2, 13, 16],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WIND3'\n      }, {\n        id: 133,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: WIND,\n        connections: [1, 2, 13, 15],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WIND4'\n      }, {\n        id: 134,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: WIND,\n        connections: [1, 2, 13, 15, 16],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WIND5'\n      }, {\n        id: 135,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: WIND,\n        connections: [1, 2, 14],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WIND6'\n      }, {\n        id: 136,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: WIND,\n        connections: [1, 14, 16],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WIND7'\n      }, {\n        id: 137,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: WIND,\n        connections: [14, 15, 16],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WIND8'\n      }, {\n        id: 138,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: WIND,\n        connections: [14, 16, 13],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WIND9'\n      }, {\n        id: 139,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: WIND,\n        connections: [14, 15],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WIND10'\n      }, {\n        id: 140,\n        production: 0,\n        isEmpty: false,\n        multiplier: 1,\n        type: WIND,\n        connections: [1, 14, 15],\n        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n        name: 'WIND11'\n      }],\n      data: {\n        nodes: [{\n          'id': 'id1',\n          'name': 'name1',\n          'val': 1,\n          isCity: false,\n          color: 'red'\n        }, {\n          'id': 'id2',\n          'name': 'name2',\n          'val': 0.5,\n          isCity: true\n        }],\n        links: [{\n          source: 'id1',\n          target: 'id2'\n        }]\n      }\n    };\n    this.handleAddNode = this.handleAddNode.bind(this);\n    this.handleAddEdge = this.handleAddEdge.bind(this);\n    this.toggleDropDown = this.toggleDropDown.bind(this);\n    this.toggleDropDown2 = this.toggleDropDown2.bind(this);\n    this.handleSetSource = this.handleSetSource.bind(this);\n    this.handlePlantChange = this.handlePlantChange.bind(this);\n    this.handleStartValueChange = this.handleStartValueChange.bind(this);\n    this.handleTidalValueChange = this.handleTidalValueChange.bind(this);\n    this.handleSolarValueChange = this.handleSolarValueChange.bind(this);\n    this.handleWindValueChange = this.handleWindValueChange.bind(this);\n    this.handleTurn = this.handleTurn.bind(this);\n    this.formatData = this.formatData.bind(this);\n    this.run = this.run.bind(this);\n    this.loadData = this.loadData.bind(this);\n    this.removePLant = this.removePLant.bind(this);\n    this.removeCity = this.removeCity.bind(this);\n  }\n\n  componentWillMount() {\n    const node = this.myRef.current;\n    console.log(node);\n    this.formatData();\n    console.group(data1);\n  }\n\n  handleAddNode(isCity) {\n    console.log(isCity, this.state.drain.isCity + 'isCitydrain');\n    var type;\n\n    if (isCity) {\n      type = 'black';\n    } else {\n      switch (this.state.selectedPlant) {\n        case 'wind':\n          type = WIND;\n          break;\n\n        case 'tidal':\n          type = TIDAL;\n          break;\n\n        case 'solar':\n          type = SOLAR;\n          break;\n\n        default:\n      }\n    }\n\n    let id = this.state.idCounter;\n\n    if (isCity && Object.keys(this.state.source).length) {\n      this.setState(prevState => ({\n        cities: [...prevState.cities, {\n          id: id,\n          currentSaturation: 0,\n          name: 'City' + id,\n          totalDemand: this.state.startValue * 3,\n          isSaturated: false\n        }],\n        idCounter: prevState.idCounter + 1\n      }));\n    } else if (!isCity && Object.keys(this.state.drain).length) {\n      this.setState(prevState => ({\n        plants: [...prevState.plants, {\n          id: id,\n          production: 0,\n          multiplier: 1,\n          name: 'PowerPLant' + id,\n          type: type,\n          previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n          connections: [this.state.drain.id],\n          isEmpty: false\n        }],\n        idCounter: prevState.idCounter + 1\n      }));\n    }\n\n    this.formatData();\n    console.log(this.state.data.links);\n  }\n\n  handleAddEdge() {\n    if (Object.keys(this.state.source).length && Object.keys(this.state.drain).length) {\n      const source = this.state.source;\n      const drain = this.state.drain;\n      let plants = this.state.plants.filter(e => e.id !== source.id);\n      let plant = this.state.plants.filter(e => e.id === source.id);\n\n      if (plant.length < 2) {\n        plant = plant.pop();\n        console.log(plant);\n        plant.connections.push(drain.id);\n        plants.push(plant);\n        console.log(plant + \"solo\"); // console.log(plants)\n\n        console.log(plants);\n        this.setState({\n          plants: plants\n        });\n      }\n    }\n\n    this.formatData(); // this.setState(prevState=>{\n    //     //plants[source.id].connections[drain.id]:0\n    //     }\n    // })\n  }\n\n  handleSetSource(source) {\n    console.log(source);\n    this.setState({\n      source: source\n    });\n  }\n\n  handleSetDrain(drain) {\n    console.log(drain);\n    this.setState({\n      drain: drain\n    });\n  }\n\n  toggleDropDown() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  toggleDropDown2() {\n    this.setState(prevState => ({\n      dropdownOpen2: !prevState.dropdownOpen2\n    }));\n  }\n\n  handleStartValueChange(event) {\n    this.setState({\n      startValue: event.target.value\n    });\n  }\n\n  handleTidalValueChange(event) {\n    this.setState({\n      tidal: event.target.value\n    });\n  }\n\n  handleSolarValueChange(event) {\n    this.setState({\n      solar: event.target.value\n    });\n  }\n\n  handleWindValueChange(event) {\n    this.setState({\n      wind: event.target.value\n    });\n  }\n\n  run() {\n    for (let i = 1; i <= 50; ++i) {\n      this.handleTurn();\n    }\n  }\n\n  loadData(data) {\n    console.log(data);\n    this.setState({\n      cities: data.cities.map(e => e),\n      plants: data.plants.map(e => e)\n    });\n    this.formatData();\n  }\n\n  removePLant() {\n    const plants = this.state.plants.filter(e => e.id !== this.state.source.id); // map((e)=>{console.log(e)\n    // return e})//e.id!==this.source.id)\n\n    this.setState({\n      plants: plants\n    });\n    this.formatData();\n  }\n\n  removeCity() {\n    const cities = this.state.cities.filter(e => e.id !== this.state.drain.id); // map((e)=>{console.log(e)\n    // return e})//e.id!==this.source.id)\n\n    this.setState({\n      cities: cities\n    });\n    this.formatData();\n  }\n\n  handleTurn() {\n    let nodes = this.state.data.nodes; // const cities = nodes.filter(e => e.isCity)\n    // console.log(cities)\n\n    const powerPlants = nodes.filter(e => !e.isCity);\n    const links = this.state.data.links;\n    let cities = [...this.state.cities];\n    let plants = [...this.state.plants]; // recalculate base values\n\n    const wind = this.state.wind;\n    const tidal = this.state.tidal;\n    const solar = this.state.solar;\n    console.log(wind, tidal, solar);\n    let areAllPlantsEmpty = false;\n    let areAllCitiesSaturated = false;\n\n    for (let p in this.state.plants) {\n      let plant = plants[p];\n\n      switch (plant.type) {\n        case WIND:\n          plant.production = Math.floor(plant.multiplier * wind);\n          break;\n\n        case TIDAL:\n          plant.production = Math.floor(plant.multiplier * tidal);\n          break;\n\n        default:\n          plant.production = Math.floor(plant.multiplier * solar);\n      }\n    }\n\n    let breaker = 0;\n\n    while (!areAllPlantsEmpty && !areAllCitiesSaturated && breaker < 150) {\n      breaker++;\n\n      for (let p in plants) {\n        console.log('looking at ' + plants[p].name + ' with production of ' + plants[p].production);\n\n        if (plants[p].isEmpty) {\n          //console.log('plant empty '+ plants[p].name)\n          continue;\n        }\n\n        for (let c in plants[p].connections) {\n          let drainID = plants[p].connections[c];\n          let city;\n          let citiesTemp;\n          citiesTemp = cities.filter(e => e.id !== drainID);\n          city = cities.filter(e => e.id === drainID);\n\n          if (city[0].isSaturated) {\n            //console.log('city saturated '+ city.name)\n            continue;\n          } else {\n            if (plants[p].production <= 0) {\n              console.log('plant empty ' + plants[p].name);\n              plants[p].isEmpty = true;\n            } else {\n              city[0].currentSaturation += 10;\n              plants[p].production -= 10;\n            }\n\n            if (city[0].currentSaturation >= city[0].totalDemand) {\n              console.log('city full ' + city.name);\n              city[0].isSaturated = true;\n            }\n          }\n\n          citiesTemp = citiesTemp.concat(city);\n          cities = [...citiesTemp];\n        }\n      }\n\n      areAllPlantsEmpty = true;\n\n      for (let p in plants) if (!plants[p].isEmpty) areAllPlantsEmpty = false;\n\n      areAllCitiesSaturated = true;\n\n      for (let c in cities) if (!cities[c].isSaturated) areAllCitiesSaturated = false;\n    }\n\n    this.setState({\n      saturated: areAllCitiesSaturated\n    });\n\n    for (let c in cities) {\n      console.log(cities[c].name + \" Saturated with \" + cities[c].currentSaturation + \" from \" + cities[c].totalDemand);\n    }\n\n    for (let p in plants) {\n      let saturated = true;\n      console.log('calculating ' + plants[p].name + ' Subnet...');\n\n      for (let c in plants[p].connections) {\n        let drainID = plants[p].connections[c];\n        let city = cities.filter(e => e.id === drainID);\n\n        if (!city[0].isSaturated) {\n          saturated = false;\n        }\n      }\n\n      plants[p].previousDecisions.pop();\n\n      if (saturated) {\n        plants[p].previousDecisions.unshift(OVER_SATURATED);\n        console.log(OVER_SATURATED);\n      } else {\n        plants[p].previousDecisions.unshift(UNDER_SATURATED);\n        console.log(UNDER_SATURATED);\n      }\n\n      let decisionCounter = 0;\n\n      for (let e in plants[p].previousDecisions) {\n        switch (plants[p].previousDecisions[e]) {\n          case SATURATED:\n            decisionCounter += 2;\n            break;\n\n          case OVER_SATURATED:\n            decisionCounter = decisionCounter++;\n            break;\n\n          default:\n            decisionCounter -= 2;\n        }\n      }\n\n      if (decisionCounter >= 9) {\n        //DECREASE\n        console.log('Decreasing Capacity');\n        plants[p].multiplier -= 0.1;\n      } else if (decisionCounter >= 0) {\n        //DO NOTHING\n        plants[p].previousDecisions.shift();\n        plants[p].previousDecisions.unshift(SATURATED);\n      } else {\n        console.log('Increasing Capacity');\n        plants[p].multiplier += 0.1;\n      }\n\n      const wind = 50 + this.getRandomInt(90);\n      const tidal = 50 + this.getRandomInt(60);\n      const solar = 50 + this.getRandomInt(70);\n      this.setState({\n        tidal: tidal,\n        wind: wind,\n        solar: solar,\n        cities: cities,\n        plants: plants\n      });\n    } //  areAllPlantsEmpty = false => plants.filter(p.energyLeft).length === 0\n    //  areAllCitiesSaturated = false => cities.filter(!c.isSaturated).length === 0\n    //  iterate over plants as areAllPlantsEmpty || areAllCitiesSaturated\n    //      calculate plant_energy (floored value)\n    //      iterate over connections\n    //          if saturationRatio < 1 then move '10' plant_energy to city\n    //          else city.isSaturated = true\n    //      if plant_energy <= 0 then plant.energyLeft = false\n    //  iterate over plants\n    //      calculate sub-net saturation\n    //      plant.previousDecisions is\n    //      if saturationRation < 1 then UNDER_SATURATED\n    //      if saturationRation === 1 then SATURATED\n    //      if saturationRation > 1 then OVER_SATURATED\n    //\n    //  === decision making ===\n    //  iterate over plants\n    //      if previousDecisions.filter(v === UNDER_SATURATED).length > 0 then increase plant.multiplier by 0.1\n    //      else if previousDecisions.filter(v === OVER_SATURATED).length === 5 then decrease plant.multiplier by 0.1\n    //\n\n\n    this.formatData();\n  }\n\n  getRandomInt(range) {\n    return Math.floor(Math.random() * range) - range / 2;\n  }\n\n  formatData() {\n    let nodes = [];\n    let links = [];\n    this.state.cities.map(e => {\n      e.isSaturated = false;\n      e.currentSaturation = 0;\n      nodes.push({\n        id: e.id,\n        name: e.name,\n        val: e.totalDemand / 200,\n        isCity: true,\n        color: 'black'\n      });\n    });\n    let color;\n    this.state.plants.map(e => {\n      e.production = 0;\n      e.isEmpty = false;\n\n      switch (e.type) {\n        case WIND:\n          color = 'grey';\n          break;\n\n        case TIDAL:\n          color = 'blue';\n          break;\n\n        default:\n          color = 'yellow';\n      }\n\n      e.connections.map(c => {\n        links.push({\n          source: e.id,\n          target: c\n        });\n      });\n      nodes.push({\n        name: 'Plant' + e.id,\n        id: e.id,\n        val: e.multiplier,\n        isCity: false,\n        color: color\n      });\n    });\n    this.setState({\n      data: {\n        nodes: nodes,\n        links: links\n      }\n    }); // setTimeout(function(){\n    //     console.log(nodes)//do what you need here\n    //     console.log(links)\n    // }, 1);\n  }\n\n  render() {\n    const data = this.state.data;\n    const sourceName = this.state.source.name;\n    const drainName = this.state.drain.name;\n    const startValue = this.state.startValue;\n    const tidalValue = this.state.tidalValue;\n    const solarValue = this.state.solarValue;\n    const windValue = this.state.windValue;\n    const dataSet_1 = this.state.dataSet_1;\n    const saturated = this.state.saturated; // const pauseGraphAnimation = function(){\n    // }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1079\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.removeCity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1080\n      },\n      __self: this\n    }, \"Remove City\"), React.createElement(Button, {\n      onClick: this.removePLant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1081\n      },\n      __self: this\n    }, \"Remove PLant\"), React.createElement(Button, {\n      onClick: () => this.loadData(dataSet_1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1082\n      },\n      __self: this\n    }, \"Load Dataset 1\"), React.createElement(Button, {\n      onClick: this.run,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1083\n      },\n      __self: this\n    }, \"RUN\"), React.createElement(Button, {\n      onClick: () => this.handleAddNode(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1084\n      },\n      __self: this\n    }, \"add a City\"), React.createElement(Button, {\n      onClick: () => this.handleAddNode(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1085\n      },\n      __self: this\n    }, \"add a Power Plant\"), React.createElement(Button, {\n      onClick: () => this.handleTurn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1086\n      },\n      __self: this\n    }, \"One Turn\"), React.createElement(Button, {\n      onClick: () => this.handleAddEdge(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1087\n      },\n      __self: this\n    }, \"Add Connection\"), React.createElement(Dropdown, {\n      isOpen: this.state.dropdownOpen,\n      toggle: this.toggleDropDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1088\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1089\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1090\n      },\n      __self: this\n    }, \"Connection Drain\"), drainName), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1093\n      },\n      __self: this\n    }, this.state.data.nodes.filter(item => item.isCity).map((item, i) => React.createElement(DropdownItem, {\n      key: i,\n      onClick: () => this.handleSetDrain(item, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1095\n      },\n      __self: this\n    }, item.name)))), React.createElement(Dropdown, {\n      isOpen: this.state.dropdownOpen2,\n      toggle: this.toggleDropDown2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1100\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1101\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1102\n      },\n      __self: this\n    }, \"Connection Source\"), sourceName), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1105\n      },\n      __self: this\n    }, this.state.data.nodes.filter(item => !item.isCity).map((item, i) => React.createElement(DropdownItem, {\n      key: i,\n      onClick: () => this.handleSetSource(item, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1107\n      },\n      __self: this\n    }, item.name)))), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1112\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1113\n      },\n      __self: this\n    }, \"Starting Value: \", startValue), React.createElement(\"input\", {\n      type: \"range\",\n      max: \"100\",\n      step: \"1\",\n      value: this.state.startValue,\n      onChange: this.handleStartValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1114\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1116\n      },\n      __self: this\n    }, \"Wave Value: \", tidalValue), React.createElement(\"input\", {\n      type: \"range\",\n      max: \"100\",\n      step: \"1\",\n      value: this.state.tidal,\n      onChange: this.handleTidalValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1117\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1119\n      },\n      __self: this\n    }, \"Solar Value: \", solarValue), React.createElement(\"input\", {\n      type: \"range\",\n      max: \"100\",\n      step: \"1\",\n      value: this.state.solar,\n      onChange: this.handleSolarValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1120\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1122\n      },\n      __self: this\n    }, \"Wind Value: \", windValue), React.createElement(\"input\", {\n      type: \"range\",\n      max: \"100\",\n      step: \"1\",\n      value: this.state.wind,\n      onChange: this.handleWindValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1123\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1127\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      tag: \"fieldset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1128\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1129\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1130\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"radio\",\n      name: \"radio1\",\n      value: 'tidal',\n      checked: this.state.selectedPlant === 'tidal',\n      onChange: this.handlePlantChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1131\n      },\n      __self: this\n    }), ' ', \"Wave\")), React.createElement(FormGroup, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1139\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1140\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"radio\",\n      name: \"radio1\",\n      value: 'solar',\n      checked: this.state.selectedPlant === 'solar',\n      onChange: this.handlePlantChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1141\n      },\n      __self: this\n    }), ' ', \"Solar\")), React.createElement(FormGroup, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1149\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1150\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"radio\",\n      name: \"radio1\",\n      value: 'wind',\n      checked: this.state.selectedPlant === 'wind',\n      onChange: this.handlePlantChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1151\n      },\n      __self: this\n    }), ' ', \"Wind\")))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1161\n      },\n      __self: this\n    }, \"Is the System saturated: \", saturated.toString()), React.createElement(ForceGraph2D, {\n      ref: el => {\n        window.el = el;\n      },\n      graphData: data,\n      nodeLabel: 'F',\n      pauseAnimation: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1162\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/lj/Git/myproject/AOT/aot_ha1/src/Graphs/try2.js"],"names":["React","Component","ForceGraph2D","Button","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","FormGroup","Label","Input","data1","WIND","TIDAL","SOLAR","SATURATED","OVER_SATURATED","UNDER_SATURATED","Try","constructor","props","handlePlantChange","changeEvent","setState","selectedPlant","target","value","myRef","createRef","state","saturated","dataSet_1","cities","id","currentSaturation","totalDemand","name","isSaturated","plants","production","isEmpty","multiplier","type","connections","previousDecisions","dropdownOpen","dropdownOpen2","idCounter","source","drain","startValue","wind","tidal","solar","data","nodes","isCity","color","links","handleAddNode","bind","handleAddEdge","toggleDropDown","toggleDropDown2","handleSetSource","handleStartValueChange","handleTidalValueChange","handleSolarValueChange","handleWindValueChange","handleTurn","formatData","run","loadData","removePLant","removeCity","componentWillMount","node","current","console","log","group","Object","keys","length","prevState","filter","e","plant","pop","push","handleSetDrain","event","i","map","powerPlants","areAllPlantsEmpty","areAllCitiesSaturated","p","Math","floor","breaker","c","drainID","city","citiesTemp","concat","unshift","decisionCounter","shift","getRandomInt","range","random","val","render","sourceName","drainName","tidalValue","solarValue","windValue","item","display","flexDirection","toString","el","window"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {ForceGraph2D} from 'react-force-graph'\nimport {Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, FormGroup, Label, Input} from 'reactstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n//import { Graph } from 'react-d3-graph';\nimport data1 from './data'\nconst WIND = 'WIND'\nconst TIDAL = 'TIDAL'\nconst SOLAR = 'SOLAR'\n\nconst SATURATED = 'SATURATED'\nconst OVER_SATURATED = 'OVER_SATURATED'\nconst UNDER_SATURATED = 'UNDER_SATURATED'\n\nexport default class Try extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.myRef = React.createRef();\n        this.state = {\n            saturated:false,\n            dataSet_1:{\n\n\n                cities: [\n                    {\n                        id:1,\n                        currentSaturation: 0,\n                        totalDemand: 150,\n                        name: 'City1',\n                        isSaturated: false\n                    }\n                    ,\n                    {\n                        id:2,\n                        currentSaturation: 0,\n                        totalDemand: 150,\n                        name: 'City2',\n                        isSaturated: false\n                    },\n                    {\n                        id:3,\n                        currentSaturation: 0,\n                        totalDemand: 150,\n                        name: 'City3',\n                        isSaturated: false\n                    },\n                    {\n                        id:4,\n                        currentSaturation: 0,\n                        totalDemand: 150,\n                        name: 'City4',\n                        isSaturated: false\n                    },\n                    {\n                        id:5,\n                        currentSaturation: 0,\n                        totalDemand: 150    ,\n                        name: 'City5',\n                        isSaturated: false\n                    },\n                    {\n                        id:6,\n                        currentSaturation: 0,\n                        totalDemand: 150,\n                        name: 'City6',\n                        isSaturated: false\n                    },\n                    {\n                        id:7,\n                        currentSaturation: 0,\n                        totalDemand: 150,\n                        name: 'City7',\n                        isSaturated: false\n                    },\n                    {\n                        id:8,\n                        currentSaturation: 0,\n                        totalDemand: 150,\n                        name: 'City8',\n                        isSaturated: false\n                    },\n                    {\n                        id:9,\n                        currentSaturation: 0,\n                        totalDemand: 150,\n                        name: 'City9',\n                        isSaturated: false\n                    },\n                    {\n                        id:10,\n                        currentSaturation: 0,\n                        totalDemand: 150,\n                        name: 'City10',\n                        isSaturated: false\n                    },\n                    {\n                        id:11,\n                        currentSaturation: 0,\n                        totalDemand: 150,\n                        name: 'City11',\n                        isSaturated: false\n                    }\n                ],\n                plants: [{\n                        id:20,\n                        production:0,\n                        isEmpty: false,\n                        multiplier: 1,\n                        type: TIDAL,\n                        connections: [1],\n                        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                        name:  'WAVE1'\n                    },\n                    {\n                        id:21,\n                        production:0,\n                        isEmpty: false,\n                        multiplier: 1,\n                        type: TIDAL,\n                        connections: [1],\n                        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                        name:  'WAVE2'\n                    },\n                    {\n                        id:22,\n                        production:0,\n                        isEmpty: false,\n                        multiplier: 1,\n                        type: TIDAL,\n                        connections: [1],\n                        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                        name:  'WAVE3'\n                    },\n                    {\n                        id:23,\n                        production:0,\n                        isEmpty: false,\n                        multiplier: 1,\n                        type: TIDAL,\n                        connections: [7,8],\n                        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                        name:  'WAVE4'\n                    },\n                    {\n                        id:30,\n                        production:0,\n                        isEmpty: false,\n                        multiplier: 1,\n                        type: SOLAR,\n                        connections: [1, 2, 3],\n                        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                        name:  'SOLAR1'\n                    },\n                    {\n                        id:31,\n                        production:0,\n                        isEmpty: false,\n                        multiplier: 1,\n                        type: SOLAR,\n                        connections: [6],\n                        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                        name:  'SOLAR2'\n                    },\n                    {\n                        id:32,\n                        production:0,\n                        isEmpty: false,\n                        multiplier: 1,\n                        type: SOLAR,\n                        connections: [6],\n                        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                        name:  'SOLAR3'\n                    },\n                    {\n                        id:33,\n                        production:0,\n                        isEmpty: false,\n                        multiplier: 1,\n                        type: SOLAR,\n                        connections: [6],\n                        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                        name:  'SOLAR4'\n                    },\n                    {\n                        id:34,\n                        production:0,\n                        isEmpty: false,\n                        multiplier: 1,\n                        type: SOLAR,\n                        connections: [8, 9],\n                        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                        name:  'SOLAR5'\n                    },\n                    {\n                        id:40,\n                        production:0,\n                        isEmpty: false,\n                        multiplier: 1,\n                        type: WIND,\n                        connections: [8,7],\n                        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                        name:  'WIND2'\n                    },\n                    {\n                        id:41,\n                        production:0,\n                        isEmpty: false,\n                        multiplier: 1,\n                        type: WIND,\n                        connections: [5],\n                        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                        name:  'WIND3'\n                    },\n                    {\n                        id:42,\n                        production:0,\n                        isEmpty: false,\n                        multiplier: 1,\n                        type: WIND,\n                        connections: [5],\n                        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                        name:  'WIND4'\n                    },\n                    {\n                        id:43,\n                        production:0,\n                        isEmpty: false,\n                        multiplier: 1,\n                        type: WIND,\n                        connections: [5],\n                        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                        name:  'WIND5'\n                    },\n                    {\n                        id:44,\n                        production:0,\n                        isEmpty: false,\n                        multiplier: 1,\n                        type: WIND,\n                        connections: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n                        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                        name:  'WIND6'\n                    },\n                    {\n                        id:45,\n                        production:0,\n                        isEmpty: false,\n                        multiplier: 1,\n                        type: WIND,\n                        connections: [3,4],\n                        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                        name:  'WIND7'\n                    },\n                    {\n                        id:46,\n                        production:0,\n                        isEmpty: false,\n                        multiplier: 1,\n                        type: WIND,\n                        connections: [11],\n                        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                        name:  'WIND6'\n                    },\n                    {\n                        id:47,\n                        production:0,\n                        isEmpty: false,\n                        multiplier: 1,\n                        type: WIND,\n                        connections: [10],\n                        previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                        name:  'WIND6'\n                    },\n                ]},\n            dropdownOpen: false,\n            dropdownOpen2: false,\n            idCounter: 5,\n            source: {id:0},\n            drain: {},\n            startValue: 0,\n            selectedPlant: 'wind',\n            wind: 50,\n            tidal: 50,\n            solar: 50,\n            cities: [\n                {\n                    id:1,\n                    currentSaturation: 0,\n                    totalDemand: 1500,\n                    name: 'Berlin',\n                    isSaturated: false\n                }\n                ,\n                {\n                    id:2,\n                    currentSaturation: 0,\n                    totalDemand: 2500,\n                    name: 'Tokyo',\n                    isSaturated: false\n                },\n                {\n                    id:13,\n                    currentSaturation: 0,\n                    totalDemand: 800,\n                    name: 'Berlin',\n                    isSaturated: false\n                },\n                {\n                    id:14,\n                    currentSaturation: 0,\n                    totalDemand: 1000,\n                    name: 'Berlin',\n                    isSaturated: false\n                },\n                {\n                    id:15,\n                    currentSaturation: 0,\n                    totalDemand: 250    ,\n                    name: 'Berlin',\n                    isSaturated: false\n                },\n                {\n                    id:16,\n                    currentSaturation: 0,\n                    totalDemand: 1000,\n                    name: 'Berlin',\n                    isSaturated: false\n                }\n            ],\n            plants: [{\n                    id:3,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: WIND,\n                    connections: [1, 2, 13, 15],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name: 'WIND1'\n                },{\n                    id:4,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: TIDAL,\n                    connections: [1, 2, 16, 13],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'WAVE1'\n                },\n                {\n                    id:5,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: TIDAL,\n                    connections: [1, 2, 16, 15],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'WAVE2'\n                },\n                {\n                    id:6,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: TIDAL,\n                    connections: [1, 2, 16,13,14],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'WAVE3'\n                },\n                {\n                    id:7,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: TIDAL,\n                    connections: [2,16,15],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'WAVE4'\n                },\n                {\n                    id:8,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: TIDAL,\n                    connections: [1, 13,16],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'WAVE5'\n                },\n                {\n                    id:9,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: TIDAL,\n                    connections: [1, 2,16],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'WAVE6'\n                },\n                {\n                    id:10,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: TIDAL,\n                    connections: [15],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'WAVE7'\n                },\n                {\n                    id:11,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: TIDAL,\n                    connections: [1, 2,13],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'WAVE8'\n                },\n                {\n                    id:120,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: SOLAR,\n                    connections: [1, 2,14,16],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'SOLAR1'\n                },\n                {\n                    id:121,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: SOLAR,\n                    connections: [14,16],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'SOLAR2'\n                },\n                {\n                    id:123,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: SOLAR,\n                    connections: [1, 2,14,16],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'SOLAR3'\n                },\n                {\n                    id:124,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: SOLAR,\n                    connections: [1, 2,15,13],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'SOLAR4'\n                },\n                {\n                    id:125,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: SOLAR,\n                    connections: [14,13],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'SOLAR5'\n                },\n                {\n                    id:126,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: SOLAR,\n                    connections: [14,13],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'SOLAR6'\n                },\n                {\n                    id:127,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: SOLAR,\n                    connections: [1, 2,15,13],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'SOLAR7'\n                },\n                {\n                    id:128,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: SOLAR,\n                    connections: [,14,13],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'SOLAR8'\n                },\n                {\n                    id:129,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: SOLAR,\n                    connections: [1, 2,14,13],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'SOLAR9'\n                },\n                {\n                    id:130,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: SOLAR,\n                    connections: [ 2,14,16],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'SOLAR10'\n                },\n                {\n                    id:131,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: WIND,\n                    connections: [1, 2,13,16],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'WIND2'\n                },\n                {\n                    id:132,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: WIND,\n                    connections: [1, 2,13,16],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'WIND3'\n                },\n                {\n                    id:133,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: WIND,\n                    connections: [1, 2,13,15],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'WIND4'\n                },\n                {\n                    id:134,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: WIND,\n                    connections: [1, 2,13,15,16],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'WIND5'\n                },\n                {\n                    id:135,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: WIND,\n                    connections: [1, 2,14],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'WIND6'\n                },\n                {\n                    id:136,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: WIND,\n                    connections: [1,14,16],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'WIND7'\n                },\n                {\n                    id:137,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: WIND,\n                    connections: [14,15,16],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'WIND8'\n                },\n                {\n                    id:138,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: WIND,\n                    connections: [14,16,13],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'WIND9'\n                },\n                {\n                    id:139,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: WIND,\n                    connections: [ 14,15],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'WIND10'\n                },\n                {\n                    id:140,\n                    production:0,\n                    isEmpty: false,\n                    multiplier: 1,\n                    type: WIND,\n                    connections: [1,14,15],\n                    previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                    name:  'WIND11'\n                }\n            ],\n            data: {\n                nodes: [\n                    {\n                        'id': 'id1',\n                        'name': 'name1',\n                        'val': 1,\n                        isCity: false,\n                        color: 'red',\n                    },\n                    {\n                        'id': 'id2',\n                        'name': 'name2',\n                        'val': 0.5,\n                        isCity: true,\n                    },\n                ],\n                links: [\n                    {\n                        source: 'id1',\n                        target: 'id2'\n                    },\n                ]\n            },\n        }\n        this.handleAddNode = this.handleAddNode.bind(this)\n        this.handleAddEdge = this.handleAddEdge.bind(this)\n        this.toggleDropDown = this.toggleDropDown.bind(this)\n        this.toggleDropDown2 = this.toggleDropDown2.bind(this)\n        this.handleSetSource = this.handleSetSource.bind(this)\n        this.handlePlantChange = this.handlePlantChange.bind(this)\n        this.handleStartValueChange = this.handleStartValueChange.bind(this)\n        this.handleTidalValueChange = this.handleTidalValueChange.bind(this)\n        this.handleSolarValueChange = this.handleSolarValueChange.bind(this)\n        this.handleWindValueChange = this.handleWindValueChange.bind(this)\n        this.handleTurn = this.handleTurn.bind(this)\n        this.formatData = this.formatData.bind(this)\n        this.run = this.run.bind(this)\n        this.loadData = this.loadData.bind(this)\n        this.removePLant = this.removePLant.bind(this)\n        this.removeCity = this.removeCity.bind(this)\n    }\n    componentWillMount(){\n        const node = this.myRef.current\n        console.log(node)   \n        this.formatData()\n        console.group(data1)\n\n    }\n    handleAddNode(isCity) {\n        console.log(isCity,this.state.drain.isCity+'isCitydrain')\n        var type\n        if (isCity) {\n            type = 'black'\n        } else {\n            switch (this.state.selectedPlant) {\n                case 'wind':\n                    type = WIND\n                    break\n                case 'tidal':\n                    type = TIDAL\n                    break\n                case 'solar':\n                    type = SOLAR\n                    break\n                default:\n            }\n        }\n            let id = this.state.idCounter\n            if(isCity && Object.keys(this.state.source).length){\n                this.setState(prevState => ({\n                cities:[\n                    ...prevState.cities,\n                    {   \n                        id:id,\n                        currentSaturation: 0,\n                        name: 'City' + id,\n                        totalDemand: this.state.startValue * 3,\n                        isSaturated: false\n                    }\n                ],    \n                idCounter: prevState.idCounter + 1,      \n            }))\n            }else if (!isCity && Object.keys(this.state.drain).length){\n                this.setState(prevState => ({\n                    plants:[\n                        ...prevState.plants,\n                        {   \n                            id:id,\n                            production: 0,\n                            multiplier: 1,\n                            name: 'PowerPLant' + id,\n                            type: type,\n                            previousDecisions: [UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED, UNDER_SATURATED],\n                            connections:[this.state.drain.id],\n                            isEmpty: false\n                        }\n                    ],\n                    idCounter: prevState.idCounter + 1,                 \n                }))\n            }\n       this.formatData()\n       console.log(this.state.data.links)\n    }\n    handleAddEdge() {\n        if(Object.keys(this.state.source).length && Object.keys(this.state.drain).length){\n        const source = this.state.source\n        const drain = this.state.drain\n        let plants = this.state.plants.filter(e=>e.id !== source.id)\n        let plant = this.state.plants.filter(e=>e.id === source.id)\n        if(plant.length<2){\n            plant = plant.pop()\n            console.log(plant)\n            plant.connections.push(drain.id)\n            plants.push(plant)\n            console.log(plant+\"solo\")\n            // console.log(plants)\n            \n                console.log(plants)\n                this.setState({\n                    plants:plants\n                })\n            }\n        }\n        this.formatData()\n        // this.setState(prevState=>{\n        //     //plants[source.id].connections[drain.id]:0\n                \n        //     }\n        // })\n    }\n    handleSetSource(source) {\n        console.log(source)\n        this.setState({\n            source: source\n        })\n    }\n    handleSetDrain(drain) {\n        console.log(drain)\n        this.setState({\n            drain: drain\n        })\n    }\n    toggleDropDown() {\n        this.setState(prevState => ({\n            dropdownOpen: !prevState.dropdownOpen\n        }))\n    }\n    toggleDropDown2() {\n        this.setState(prevState => ({\n            dropdownOpen2: !prevState.dropdownOpen2\n        }))\n    }\n    handleStartValueChange(event) {\n        this.setState({startValue: event.target.value})\n    }\n    handleTidalValueChange(event) {\n        this.setState({tidal: event.target.value})\n    }\n    handleSolarValueChange(event) {\n        this.setState({solar: event.target.value})\n    }\n    handleWindValueChange(event) {\n        this.setState({wind: event.target.value})\n    }\n    handlePlantChange = changeEvent => {\n        this.setState({\n            selectedPlant: changeEvent.target.value\n        })\n    }\n    run(){\n        for (let i = 1; i <= 50; ++i) {\n            \n              this.handleTurn()}\n            \n    }\n    loadData(data){\n        console.log(data)\n        this.setState({\n            cities:data.cities.map(e=>e),\n            plants:data.plants.map(e=>e)\n        })\n        this.formatData()\n    }\n    removePLant(){\n        const plants = this.state.plants.filter(e=>e.id !== this.state.source.id)\n            // map((e)=>{console.log(e)\n            // return e})//e.id!==this.source.id)\n        this.setState({\n            plants:plants\n        })\n        this.formatData()\n    }\n    removeCity(){\n        const cities = this.state.cities.filter(e=>e.id !== this.state.drain.id)\n            // map((e)=>{console.log(e)\n            // return e})//e.id!==this.source.id)\n        this.setState({\n            cities:cities\n        })\n        this.formatData()\n    }\n    handleTurn() {\n        let nodes = this.state.data.nodes\n        // const cities = nodes.filter(e => e.isCity)\n        // console.log(cities)\n        const powerPlants = nodes.filter(e => !e.isCity)\n        const links = this.state.data.links\n\n        let cities = [...this.state.cities]\n        let plants = [...this.state.plants]\n\n        // recalculate base values\n        const wind = this.state.wind\n        const tidal = this.state.tidal\n        const solar = this.state.solar\n        console.log(wind,tidal,solar)\n        let areAllPlantsEmpty = false\n        let areAllCitiesSaturated = false\n        for(let p in this.state.plants){\n            let plant = plants[p]\n            switch(plant.type){\n                case WIND: \n                    plant.production = Math.floor(plant.multiplier*wind)\n                    break\n                case TIDAL:\n                    plant.production = Math.floor(plant.multiplier*tidal)\n                    break\n                default:\n                    plant.production = Math.floor(plant.multiplier*solar)\n            }\n        }\n        let breaker = 0\n        while(!areAllPlantsEmpty && !areAllCitiesSaturated && breaker<150){\n            breaker++\n            for(let p in plants){\n                console.log('looking at '+plants[p].name + ' with production of ' + plants[p].production)\n                if(plants[p].isEmpty){\n                    //console.log('plant empty '+ plants[p].name)\n                    continue\n                }\n                    \n                for(let c in plants[p].connections){\n                    let drainID = plants[p].connections[c]\n                    let city\n                    let citiesTemp\n                    \n                    citiesTemp = cities.filter(e=>e.id !== drainID)\n                    city = cities.filter(e=>e.id === drainID)\n                    \n                    if(city[0].isSaturated ){\n                        //console.log('city saturated '+ city.name)\n                        continue\n                    }   \n                    else{\n                        \n                        if(plants[p].production <=0){\n                            console.log('plant empty '+ plants[p].name)\n                            plants[p].isEmpty = true\n                            \n                        }else{\n                            city[0].currentSaturation +=10\n                            plants[p].production -= 10    \n                        }\n                            \n                        if(city[0].currentSaturation >= city[0].totalDemand){\n                            console.log('city full '+ city.name)\n                            city[0].isSaturated = true\n                        }\n                        \n                    }\n                    citiesTemp = citiesTemp.concat(city)\n                    cities = [...citiesTemp]\n                }\n            }\n            areAllPlantsEmpty = true\n            for(let p in plants)              \n                if(!plants[p].isEmpty)\n                    areAllPlantsEmpty = false\n            areAllCitiesSaturated = true\n            for(let c in cities)\n                if(!cities[c].isSaturated)\n                    areAllCitiesSaturated = false\n        }\n        this.setState({\n            saturated:areAllCitiesSaturated\n        })\n        for(let c in cities){\n\n            console.log(cities[c].name + \" Saturated with \" + cities[c].currentSaturation + \" from \" + cities[c].totalDemand)\n        }\n        for(let p in plants){\n            let saturated = true \n            console.log('calculating ' + plants[p].name + ' Subnet...')\n            for(let c in plants[p].connections){\n                let drainID = plants[p].connections[c]\n                \n                let city = cities.filter(e=>e.id === drainID)\n\n                if(!city[0].isSaturated){\n                   saturated = false \n                }\n            }\n            \n            plants[p].previousDecisions.pop()\n            \n            \n            if(saturated){\n                \n                plants[p].previousDecisions.unshift(OVER_SATURATED)\n                console.log(OVER_SATURATED)\n            }else{\n                plants[p].previousDecisions.unshift(UNDER_SATURATED)\n                console.log(UNDER_SATURATED)\n            }\n\n            let decisionCounter = 0\n            \n            for(let e in plants[p].previousDecisions){\n                \n                switch(plants[p].previousDecisions[e]){\n                    case SATURATED:\n                        decisionCounter += 2\n                       \n                        break\n                    case OVER_SATURATED:\n                        \n                        decisionCounter = decisionCounter++\n                        break\n                    default:\n                        decisionCounter -= 2\n                }\n                \n                \n            }\n            \n            if(decisionCounter >= 9){\n                    //DECREASE\n                    console.log('Decreasing Capacity')\n                    plants[p].multiplier -= 0.1\n                }    \n                else if(decisionCounter>=0){\n                    //DO NOTHING\n                    plants[p].previousDecisions.shift()\n                    plants[p].previousDecisions.unshift(SATURATED)   \n                }else{\n                    console.log('Increasing Capacity')\n                    plants[p].multiplier += 0.1\n                }\n            const wind = 50 +this.getRandomInt(90)\n            const tidal = 50 +this.getRandomInt(60)\n            const solar = 50 +this.getRandomInt(70)\n            this.setState({\n                tidal:tidal,\n                wind:wind,\n                solar:solar,\n                cities: cities,\n                plants: plants\n            })\n            \n        }    \n            \n\n        //  areAllPlantsEmpty = false => plants.filter(p.energyLeft).length === 0\n        //  areAllCitiesSaturated = false => cities.filter(!c.isSaturated).length === 0\n        //  iterate over plants as areAllPlantsEmpty || areAllCitiesSaturated\n        //      calculate plant_energy (floored value)\n        //      iterate over connections\n        //          if saturationRatio < 1 then move '10' plant_energy to city\n        //          else city.isSaturated = true\n        //      if plant_energy <= 0 then plant.energyLeft = false\n\n        //  iterate over plants\n        //      calculate sub-net saturation\n        //      plant.previousDecisions is\n            //      if saturationRation < 1 then UNDER_SATURATED\n            //      if saturationRation === 1 then SATURATED\n            //      if saturationRation > 1 then OVER_SATURATED\n        //\n\n        //  === decision making ===\n        //  iterate over plants\n        //      if previousDecisions.filter(v === UNDER_SATURATED).length > 0 then increase plant.multiplier by 0.1\n        //      else if previousDecisions.filter(v === OVER_SATURATED).length === 5 then decrease plant.multiplier by 0.1\n        //\n        this.formatData()\n    }\n    getRandomInt(range) {\n        return Math.floor(Math.random() * (range)) - (range / 2)\n    }\n    formatData() {\n        let nodes = []\n        let links = []\n        this.state.cities.map(e => {\n            e.isSaturated = false\n            e.currentSaturation = 0\n            nodes.push({\n                id:e.id,\n                name:e.name,\n                val:e.totalDemand/200,\n                isCity:true,\n                color:'black'\n            })\n        })\n        let color\n        this.state.plants.map(e =>{\n            e.production = 0\n            e.isEmpty = false\n            switch(e.type){\n                case WIND:\n                    color = 'grey'\n                    break\n                case TIDAL:\n                    color = 'blue'\n                    break;\n                default:\n                    color = 'yellow'\n            }\n            e.connections.map(c=>{\n                links.push({\n                    source:e.id,\n                    target:c\n                })\n            })\n            nodes.push({\n                name:'Plant'+e.id,\n                id:e.id,\n                val:e.multiplier,\n                isCity:false,\n                color:color\n            })\n        })\n        this.setState({\n            data:{\n                nodes: nodes,\n                links: links\n            }\n        })\n        // setTimeout(function(){\n        //     console.log(nodes)//do what you need here\n        //     console.log(links)\n        // }, 1);\n        \n    }\n\n    render() {\n        const data = this.state.data\n        const sourceName = this.state.source.name\n        const drainName = this.state.drain.name\n        const startValue = this.state.startValue\n        const tidalValue = this.state.tidalValue\n        const solarValue = this.state.solarValue\n        const windValue = this.state.windValue\n        const dataSet_1 = this.state.dataSet_1\n        const saturated = this.state.saturated\n        // const pauseGraphAnimation = function(){\n\n        // }\n        return (\n            <div>\n                <Button onClick={this.removeCity}>Remove City</Button>\n                <Button onClick={this.removePLant}>Remove PLant</Button>\n                <Button onClick={() => this.loadData(dataSet_1)}>Load Dataset 1</Button>\n                <Button onClick={this.run}>RUN</Button>\n                <Button onClick={() => this.handleAddNode(true)}>add a City</Button>\n                <Button onClick={() => this.handleAddNode(false)}>add a Power Plant</Button>\n                <Button onClick={() => this.handleTurn()}>One Turn</Button>\n                <Button onClick={() => this.handleAddEdge()}>Add Connection</Button>\n                <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropDown}>\n                    <DropdownToggle caret>\n                        <p>Connection Drain</p>\n                        {drainName}\n                    </DropdownToggle>\n                    <DropdownMenu>\n\n                        {this.state.data.nodes.filter((item)=>item.isCity).map((item, i) => <DropdownItem key={i}\n                                                                              onClick={() => this.handleSetDrain(item, i)}>{item.name}</DropdownItem>)}\n\n                    </DropdownMenu>\n                </Dropdown>\n                <Dropdown isOpen={this.state.dropdownOpen2} toggle={this.toggleDropDown2}>\n                    <DropdownToggle caret>\n                        <p>Connection Source</p>\n                        {sourceName}\n                    </DropdownToggle>\n                    <DropdownMenu>\n\n                        {this.state.data.nodes.filter((item)=>!item.isCity).map((item, i) => <DropdownItem key={i}\n                                                                              onClick={() => this.handleSetSource(item, i)}>{item.name}</DropdownItem>)}\n\n                    </DropdownMenu>\n                </Dropdown>\n                <div style={{display: 'flex', flexDirection: 'column'}}>\n                    <label>Starting Value: {startValue}</label>\n                    <input type=\"range\" max=\"100\" step=\"1\" value={this.state.startValue}\n                           onChange={this.handleStartValueChange}></input>\n                    <label>Wave Value: {tidalValue}</label>\n                    <input type=\"range\" max=\"100\" step=\"1\" value={this.state.tidal}\n                           onChange={this.handleTidalValueChange}></input>\n                    <label>Solar Value: {solarValue}</label>\n                    <input type=\"range\" max=\"100\" step=\"1\" value={this.state.solar}\n                           onChange={this.handleSolarValueChange}></input>\n                    <label>Wind Value: {windValue}</label>\n                    <input type=\"range\" max=\"100\" step=\"1\" value={this.state.wind}\n                           onChange={this.handleWindValueChange}></input>\n                </div>\n\n                <div>\n                    <FormGroup tag=\"fieldset\">\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name=\"radio1\"\n                                       value={'tidal'}\n                                       checked={this.state.selectedPlant === 'tidal'}\n                                       onChange={this.handlePlantChange}\n                                />{' '}\n                                Wave\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name=\"radio1\"\n                                       value={'solar'}\n                                       checked={this.state.selectedPlant === 'solar'}\n                                       onChange={this.handlePlantChange}\n                                />{' '}\n                                Solar\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name=\"radio1\"\n                                       value={'wind'}\n                                       checked={this.state.selectedPlant === 'wind'}\n                                       onChange={this.handlePlantChange}\n                                />{' '}\n                                Wind\n                            </Label>\n                        </FormGroup>\n                    </FormGroup>\n                </div>\n                <p>Is the System saturated: {saturated.toString()}</p>\n                <ForceGraph2D ref={el => {window.el = el}} graphData={data} nodeLabel={'F'} pauseAnimation={true}></ForceGraph2D>\n\n            </div>\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}