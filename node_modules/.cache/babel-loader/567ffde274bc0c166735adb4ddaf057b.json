{"ast":null,"code":"var _jsxFileName = \"/home/lj/Git/myproject/AOT/aot_ha1/src/Graphs/try.js\";\nimport React, { Component } from 'react';\nimport { ForceGraph2D, ForceGraph3D, ForceGraphVR } from 'react-force-graph';\nimport { Button } from 'reactstrap';\nexport default class Try extends Component {\n  constructor(props) {\n    super(props); // Don't call this.setState() here!\n\n    this.state = {\n      idCounter: 3,\n      data: {\n        \"nodes\": [{\n          \"id\": \"id1\",\n          \"name\": \"name1\",\n          \"val\": 1\n        }, {\n          \"id\": \"id2\",\n          \"name\": \"name2\",\n          \"val\": 10\n        }],\n        \"links\": [{\n          \"source\": \"id1\",\n          \"target\": \"id2\"\n        }]\n      }\n    };\n    this.handleAddNode = this.handleAddNode.bind(this);\n  }\n\n  handleAddNode() {\n    this.setState(prevState => ({\n      data: {\n        \"nodes\": [...prevState.nodes, {\n          \"id\": \"id\" + prevState.idCounter,\n          \"name\": \"name\" + prevState.idCounter,\n          \"val\": 20\n        }]\n      },\n      idCounter: prevState.idCounter++\n    }));\n  }\n\n  render() {\n    const data = this.state.data;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"hallo\"), React.createElement(Button, {\n      onClick: this.handleAddNode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(ForceGraph2D, {\n      graphData: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/lj/Git/myproject/AOT/aot_ha1/src/Graphs/try.js"],"names":["React","Component","ForceGraph2D","ForceGraph3D","ForceGraphVR","Button","Try","constructor","props","state","idCounter","data","handleAddNode","bind","setState","prevState","nodes","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,YAArC,QAAyD,mBAAzD;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,eAAe,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AACvCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,CADF;AAETC,MAAAA,IAAI,EAAE;AACF,iBAAS,CACL;AACE,gBAAM,KADR;AAEE,kBAAQ,OAFV;AAGE,iBAAO;AAHT,SADK,EAML;AACE,gBAAM,KADR;AAEE,kBAAQ,OAFV;AAGE,iBAAO;AAHT,SANK,CADP;AAaF,iBAAS,CACL;AACI,oBAAU,KADd;AAEI,oBAAU;AAFd,SADK;AAbP;AAFG,KAAb;AAuBA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AACDD,EAAAA,aAAa,GAAE;AACX,SAAKE,QAAL,CAAcC,SAAS,KAAK;AACxBJ,MAAAA,IAAI,EAAE;AACF,iBAAQ,CACJ,GAAGI,SAAS,CAACC,KADT,EAEJ;AACI,gBAAM,OAAOD,SAAS,CAACL,SAD3B;AAEI,kBAAQ,SAASK,SAAS,CAACL,SAF/B;AAGI,iBAAO;AAHX,SAFI;AADN,OADkB;AAYxBA,MAAAA,SAAS,EAAEK,SAAS,CAACL,SAAV;AAZa,KAAL,CAAvB;AAcH;;AACDO,EAAAA,MAAM,GAAG;AACL,UAAMN,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAxB;AACF,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAED,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADJ;AASD;;AAxDsC","sourcesContent":["import React, { Component } from 'react';\nimport { ForceGraph2D, ForceGraph3D, ForceGraphVR } from 'react-force-graph';\nimport { Button } from 'reactstrap';\nexport default class Try extends Component {\n    constructor(props) {\n        super(props);\n        // Don't call this.setState() here!\n        this.state = { \n            idCounter: 3,\n            data: {\n                \"nodes\": [ \n                    { \n                      \"id\": \"id1\",\n                      \"name\": \"name1\",\n                      \"val\": 1 \n                    },\n                    { \n                      \"id\": \"id2\",\n                      \"name\": \"name2\",\n                      \"val\": 10 \n                    },\n                ],\n                \"links\": [\n                    {\n                        \"source\": \"id1\",\n                        \"target\": \"id2\"\n                    },\n                ]\n            }\n        };\n        this.handleAddNode = this.handleAddNode.bind(this);\n    }\n    handleAddNode(){\n        this.setState(prevState => ({\n            data: {\n                \"nodes\":[\n                    ...prevState.nodes,\n                    {\n                        \"id\": \"id\" + prevState.idCounter,\n                        \"name\": \"name\" + prevState.idCounter,\n                        \"val\": 20\n\n                    }                \n                ]\n            },\n            idCounter: prevState.idCounter++\n        }))\n    }\n    render() {\n        const data = this.state.data\n      return(\n          <div>\n            <p>hallo</p>\n            <Button onClick={this.handleAddNode}></Button>\n            <ForceGraph2D graphData={data}></ForceGraph2D>\n\n          </div>\n          \n      )\n    }\n  }"]},"metadata":{},"sourceType":"module"}